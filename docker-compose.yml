version: "3"

services:
  mc:
    image: itzg/minecraft-server:java20-alpine
    security_opt:
      - apparmor=minecraft-armor
    # Volumes map paths on the host to paths in the container
    volumes:
      # Stores Minecraft data, making it persistent and re-usable among other containers
      - "mc:/data"
      # Mounted as read-only, used to load a list of mods
      - "./mods.txt:/extras/mods.txt:ro"
      # Mounted as read-only, used to load a list of datapacks
      - "./datapacks.txt:/extras/datapacks.txt"
      # Folder containing datapacks that will be loaded into the server
      - "./datapacks/:/datapacks/"
    # Expose ports to the host machine
    ports:
      - "25565:25565" # Default Minecraft port
    pull_policy: "always" # Always pull the latest image
    environment:
      VERSION: "1.20.1" # Minecraft version
      EULA: "TRUE" # You need to agree to the EULA to run the server
      TYPE: "FABRIC" # Server type
      MODE: "survival" # Game mode
      DIFFICULTY: "hard" # Difficulty setting
      FORCE_GAMEMODE: "true" # Forces the game mode to be the same for all players
      SPAWN_PROTECTION: 0 # The radius of the spawn protection
      ENABLE_COMMAND_BLOCK: "true" # Enable the usage of command blocks
      OVERRIDE_SERVER_PROPERTIES: "true" # Overrides the server properties file on start up
      ICON: "https://i.imgur.com/wnrEgP7.png" # Server icon
      OVERRIDE_ICON: "TRUE" # Overrides the server icon
      MOTD: "\u00A7f\u00A7fWelcome to [\u00A74\u00A7l\u00A7k?\u00A7r] \u00A7eCocoa SMP\u00A7r\n\u00A7f\u00A7fJust play, and have fun!" # Message of the day
      SERVER_NAME: "CoCoa SMP" # Server name
      OPS: "XLTU" # OP players
      MEMORY: "16G" # Amount of memory allocated for the server
      NETWORK_COMPRESSION_THRESHOLD: 512 # Size at which data is compressed
      SIMULATION_DISTANCE: 3 # Server view distance in chunks
      MAX_TICK_TIME: "-1" # Maximum amount of time for a tick
      VIEW_DISTANCE: 6 # View distance from the player
      SYNC_CHUNK_WRITES: "false" # Control over the rate chunks are saved
      # JVM options for better performance and compatibility
      JVM_OPTS: >
        -Xms4G -Xmx16G
        -XX:+UnlockExperimentalVMOptions 
        -XX:+UnlockDiagnosticVMOptions 
        -Dterminal.jline=false 
        -Dterminal.ansi=true 
        -Djline.terminal=jline.UnsupportedTerminal 
        -Dlog4j2.formatMsgNoLookups=true 
        -XX:+AlwaysActAsServerClassMachine 
        -XX:+AlwaysPreTouch 
        -XX:+DisableExplicitGC 
        -XX:+UseNUMA 
        -XX:AllocatePrefetchStyle=3 
        -XX:NmethodSweepActivity=1 
        -XX:ReservedCodeCacheSize=400M 
        -XX:NonNMethodCodeHeapSize=12M 
        -XX:ProfiledCodeHeapSize=194M 
        -XX:NonProfiledCodeHeapSize=194M 
        -XX:+PerfDisableSharedMem 
        -XX:+UseFastUnorderedTimeStamps 
        -XX:+UseCriticalJavaThreadPriority 
        -XX:+EagerJVMCI 
        -Dgraal.TuneInlinerExploration=1 
        -Dgraal.CompilerConfiguration=enterprise 
        -XX:+UseG1GC 
        -XX:+ParallelRefProcEnabled 
        -XX:MaxGCPauseMillis=200 
        -XX:+DisableExplicitGC 
        -XX:+AlwaysPreTouch 
        -XX:G1NewSizePercent=30 
        -XX:G1MaxNewSizePercent=40 
        -XX:G1HeapRegionSize=8M 
        -XX:G1ReservePercent=20 
        -XX:G1HeapWastePercent=5 
        -XX:G1MixedGCCountTarget=4 
        -XX:InitiatingHeapOccupancyPercent=15 
        -XX:G1MixedGCLiveThresholdPercent=90 
        -XX:G1RSetUpdatingPauseTimePercent=5 
        -XX:SurvivorRatio=32 
        -XX:MaxTenuringThreshold=1 
        -XX:+UseStringDeduplication 
        -XX:+UseFastUnorderedTimeStamps 
        -XX:+UseAES 
        -XX:+UseAESIntrinsics 
        -XX:+UseFMA 
        -XX:+UseLoopPredicate 
        -XX:+RangeCheckElimination 
        -XX:+EliminateLocks 
        -XX:+DoEscapeAnalysis 
        -XX:+UseCodeCacheFlushing 
        -XX:+SegmentedCodeCache 
        -XX:+UseFastJNIAccessors 
        -XX:+OptimizeStringConcat 
        -XX:+UseCompressedOops 
        -XX:+UseThreadPriorities 
        -XX:+OmitStackTraceInFastThrow 
        -XX:+TrustFinalNonStaticFields 
        -XX:ThreadPriorityPolicy=1 
        -XX:+UseInlineCaches 
        -XX:+RewriteBytecodes 
        -XX:+RewriteFrequentPairs 
        -XX:-DontCompileHugeMethods 
        -XX:+UseFPUForSpilling 
        -XX:+UseVectorCmov 
        -XX:+UseXMMForArrayCopy 
        -XX:+UseTransparentHugePages 
        -XX:+UseLargePages 
        -Dfile.encoding=UTF-8 
        -Xlog:async 
        -Djava.security.egd=file:/dev/urandom --add-modules jdk.incubator.vector

      REMOVE_OLD_MODS: "true"
      OVERRIDE_OPS: "true"
      CONSOLE: "FALSE"
      GUI: "FALSE"
      MODS_FILE: "/extras/mods.txt"
      # since not all datapackas can get a solid download link, we manually download them.
      # DATAPACKS_FILE: "/extras/datapacks.txt"
      DATAPACKS: "/datapacks"
    tty: true
    stdin_open: false
    restart: unless-stopped

  backups:
    image: itzg/mc-backup
    environment:
      BACKUP_INTERVAL: "4h"
      # instead of network_mode below, could declare RCON_HOST
      RCON_HOST: mc
      POST_BACKUP_SCRIPT_FILE: /post-backup.sh
      # The directory where the Minecraft backups are stored.
      BACKUP_DIR: /backups
      # The directory where the latest backup file is copied to.
      # This is a git repository for pushing the latest backup file to GitHub/GitLab.
      # So before running this script, you need to initialize the git repository.
      BACKUP_POOL_DIR: /pool
      # The name of the secret that stores the remote URL of the git repository for pushing the latest backup file.
      REMOTE_DEST_ACCESS_TOKEN_SECRET_NAME: mc-backup-origin-with-key
    secrets:
      - mc-backup-origin-with-key
    volumes:
      # mount the same volume used by server, but read-only
      - mc:/data:ro
      # use a host attached directory so that it in turn can be backed up
      # to external/cloud storage
      - ./mc-backups:/backups
      # use a host attached directory to store the pool of backups
      - ~/minecraft-backup-pool:/pool
      # mount the post-backup script
      - ./post-backup.sh:/post-backup.sh:ro
    # share network namespace with server to simplify rcon access
    network_mode: "service:mc"
    restart: always
    pull_policy: "always" # Always pull the latest image
    depends_on:
      - mc

volumes:
  mc: { }

secrets:
  mc-backup-origin-with-key:
    file: ./backup-origin.txt
